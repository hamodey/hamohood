[{"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/reportWebVitals.js":"1","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/api.js":"2","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/App.js":"3","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/Article.js":"4","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/firebase.js":"5","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/Stats.js":"6","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/LineGraph.js":"7","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/context/StockContext.js":"8","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/StatsRow.js":"9","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/Newsfeed.js":"10"},{"size":362,"mtime":1606648322000,"results":"11","hashOfConfig":"12"},{"size":81,"mtime":1638720217517,"results":"13","hashOfConfig":"12"},{"size":443,"mtime":1638728053370,"results":"14","hashOfConfig":"12"},{"size":1498,"mtime":1638720361772,"results":"15","hashOfConfig":"12"},{"size":557,"mtime":1638721952169,"results":"16","hashOfConfig":"12"},{"size":2768,"mtime":1638726262122,"results":"17","hashOfConfig":"12"},{"size":2722,"mtime":1638727989668,"results":"18","hashOfConfig":"12"},{"size":733,"mtime":1638728507780,"results":"19","hashOfConfig":"12"},{"size":978,"mtime":1638728546576,"results":"20","hashOfConfig":"12"},{"size":2073,"mtime":1638728574625,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3pr38w",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/reportWebVitals.js",[],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/api.js",["44"],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/App.js",[],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/Article.js",["45","46"],"import React, { useState, useEffect } from \"react\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\nimport {key} from \"./api\";\nimport axios from \"axios\";\n\nconst BASE_URL = \"https://finnhub.io/api/v1/news?category=general\";\n\nfunction Article(props) {\n    const [article, setArticle] = useState({});\n   \n    useEffect(() => {\n        if (props) {\n            return axios\n              .get(BASE_URL)\n              .then((res) => {\n                  console.log(res.data, 'res data');\n                  let article = res.data[0];\n                  setArticle(article);\n                })\n              .catch((error) => {\n                console.error(\"Error\", error.message);\n              });\n            }\n        },[props]);\n\n    return (\n    <div className=\"newsfeed__articles\">\n        <div className=\"newsfeed__article__title\">\n            <FlashOnIcon />\n            <div className=\"newsfeed__article__source\">\n                <p>{article.headline}</p>\n            </div>\n            <MoreHorizIcon />\n        </div>\n        <div className=\"newsfeed__article__content\">\n            <div className=\"newsfeed__article__paragraph\">\n                <p>\n                    {article.summary}\n                </p>\n            </div>\n            <div className=\"newsfeed__article__image\">\n                <img src={article.image} width=\"125\" height=\"75\"/>\n            </div>\n        </div>\n    </div>\n    );\n}\nexport default Article; \n","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/firebase.js",[],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/Stats.js",["47","48","49","50"],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/LineGraph.js",[],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/context/StockContext.js",[],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/StatsRow.js",["51"],"import React, { useContext } from \"react\";\nimport StockChart from './stock.svg'\nimport { Context } from './context/StockContext';\n\nfunction StatsRow(props) {\n  const percentage = ((props.price - props.openPrice)/props.openPrice) * 100;\n  const { setSymbol, setCurrent, setChange } = useContext(Context);\n\n  const changeSymbol = () => {\n    setSymbol(props.name);\n    setCurrent(props.price);\n    setChange(Number(percentage).toFixed(2));\n  }\n\n  return (\n    <div className=\"row\" onClick={changeSymbol}>\n      <div className=\"row__intro\">\n        <h1>{props?.name}</h1>\n        <p>{props.volume && \n          (props.volume + \" shares\")\n        }</p>\n      </div>\n      <div className=\"row__chart\">\n        <img src={StockChart} height={16}/>\n      </div>\n      <div className=\"row__numbers\">\n        <p className=\"row__price\">{props.price}</p>\n        <p className=\"row__percentage\"> +{Number(percentage).toFixed(2)}%</p>\n      </div>\n    </div>\n  );\n}\n\nexport default StatsRow;\n","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/Newsfeed.js",["52","53"],{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},{"ruleId":"54","severity":1,"message":"58","line":4,"column":9,"nodeType":"56","messageId":"57","endLine":4,"endColumn":12},{"ruleId":"59","severity":1,"message":"60","line":43,"column":17,"nodeType":"61","endLine":43,"endColumn":67},{"ruleId":"54","severity":1,"message":"62","line":1,"column":38,"nodeType":"56","messageId":"57","endLine":1,"endColumn":48},{"ruleId":"63","severity":1,"message":"64","line":26,"column":33,"nodeType":"65","messageId":"66","endLine":26,"endColumn":35},{"ruleId":"63","severity":1,"message":"64","line":55,"column":28,"nodeType":"65","messageId":"66","endLine":55,"endColumn":30},{"ruleId":"67","severity":1,"message":"68","line":70,"column":6,"nodeType":"69","endLine":70,"endColumn":8,"suggestions":"70"},{"ruleId":"59","severity":1,"message":"60","line":24,"column":9,"nodeType":"61","endLine":24,"endColumn":44},{"ruleId":"54","severity":1,"message":"71","line":10,"column":25,"nodeType":"56","messageId":"57","endLine":10,"endColumn":34},{"ruleId":"54","severity":1,"message":"72","line":23,"column":10,"nodeType":"56","messageId":"57","endLine":23,"endColumn":14},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'key' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyStocks'. Either include it or remove the dependency array.","ArrayExpression",["73"],"'setTopics' is assigned a value but never used.","'seed' is assigned a value but never used.",{"desc":"74","fix":"75"},"Update the dependencies array to be: [getMyStocks]",{"range":"76","text":"77"},[1674,1676],"[getMyStocks]"]