[{"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/reportWebVitals.js":"1","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/api.js":"2","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/App.js":"3","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/Article.js":"4","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/firebase.js":"5","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/Stats.js":"6","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/LineGraph.js":"7","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/context/StockContext.js":"8","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/StatsRow.js":"9","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/Newsfeed.js":"10","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/index.js":"11"},{"size":362,"mtime":1606648322000,"results":"12","hashOfConfig":"13"},{"size":53,"mtime":1638729248883,"results":"14","hashOfConfig":"13"},{"size":443,"mtime":1638728053370,"results":"15","hashOfConfig":"13"},{"size":1498,"mtime":1638720361772,"results":"16","hashOfConfig":"13"},{"size":557,"mtime":1638721952169,"results":"17","hashOfConfig":"13"},{"size":2777,"mtime":1638729233193,"results":"18","hashOfConfig":"13"},{"size":2722,"mtime":1638727989668,"results":"19","hashOfConfig":"13"},{"size":733,"mtime":1638728507780,"results":"20","hashOfConfig":"13"},{"size":978,"mtime":1638728546576,"results":"21","hashOfConfig":"13"},{"size":2073,"mtime":1638728574625,"results":"22","hashOfConfig":"13"},{"size":500,"mtime":1606648322000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3pr38w",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/reportWebVitals.js",[],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/api.js",[],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/App.js",[],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/Article.js",["49","50"],"import React, { useState, useEffect } from \"react\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\nimport {key} from \"./api\";\nimport axios from \"axios\";\n\nconst BASE_URL = \"https://finnhub.io/api/v1/news?category=general\";\n\nfunction Article(props) {\n    const [article, setArticle] = useState({});\n   \n    useEffect(() => {\n        if (props) {\n            return axios\n              .get(BASE_URL)\n              .then((res) => {\n                  console.log(res.data, 'res data');\n                  let article = res.data[0];\n                  setArticle(article);\n                })\n              .catch((error) => {\n                console.error(\"Error\", error.message);\n              });\n            }\n        },[props]);\n\n    return (\n    <div className=\"newsfeed__articles\">\n        <div className=\"newsfeed__article__title\">\n            <FlashOnIcon />\n            <div className=\"newsfeed__article__source\">\n                <p>{article.headline}</p>\n            </div>\n            <MoreHorizIcon />\n        </div>\n        <div className=\"newsfeed__article__content\">\n            <div className=\"newsfeed__article__paragraph\">\n                <p>\n                    {article.summary}\n                </p>\n            </div>\n            <div className=\"newsfeed__article__image\">\n                <img src={article.image} width=\"125\" height=\"75\"/>\n            </div>\n        </div>\n    </div>\n    );\n}\nexport default Article; \n","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/firebase.js",[],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/Stats.js",["51","52","53"],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/LineGraph.js",[],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/context/StockContext.js",[],"/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/StatsRow.js",["54"],"import React, { useContext } from \"react\";\nimport StockChart from './stock.svg'\nimport { Context } from './context/StockContext';\n\nfunction StatsRow(props) {\n  const percentage = ((props.price - props.openPrice)/props.openPrice) * 100;\n  const { setSymbol, setCurrent, setChange } = useContext(Context);\n\n  const changeSymbol = () => {\n    setSymbol(props.name);\n    setCurrent(props.price);\n    setChange(Number(percentage).toFixed(2));\n  }\n\n  return (\n    <div className=\"row\" onClick={changeSymbol}>\n      <div className=\"row__intro\">\n        <h1>{props?.name}</h1>\n        <p>{props.volume && \n          (props.volume + \" shares\")\n        }</p>\n      </div>\n      <div className=\"row__chart\">\n        <img src={StockChart} height={16}/>\n      </div>\n      <div className=\"row__numbers\">\n        <p className=\"row__price\">{props.price}</p>\n        <p className=\"row__percentage\"> +{Number(percentage).toFixed(2)}%</p>\n      </div>\n    </div>\n  );\n}\n\nexport default StatsRow;\n","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/Newsfeed.js",["55","56"],"import React, { useState, useEffect, useContext } from \"react\";\nimport \"./Newsfeed.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport LineGraph from \"./LineGraph\";\nimport Chip from '@material-ui/core/Chip';\nimport { Context } from \"./context/StockContext\";\n\n\nfunction Newsfeed() {\n  const [popularTopics, setTopics] = useState([\n    \"Technology\",\n    \"Top Movies\",\n    \"Upcoming Earnings\",\n    \"Crypto\",\n    \"Cannabis\",\n    \"Healthcare Supplies\",\n    \"Index ETFs\",\n    \"Technology\",\n    \"China\",\n    \"Pharma\",\n  ]);\n\n  const [seed, setSeed] = useState(\"\");\n  const { current, change } = useContext(Context);\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  return (\n    <div className=\"newsfeed\">\n      <div className=\"newsfeed__container\">\n        <div className=\"newsfeed__chart__section\">\n          <div className=\"newsfeed_price_asset\">\n            <h1>${current}</h1>\n            <p>{change}%</p>\n          </div>\n          <div className=\"newsfeed__chart\">\n            <LineGraph />\n          </div>\n        </div>\n        <div className=\"newsfeed__buying__section\">\n          <h2> Buying Power</h2>\n          <h2> $4.11</h2>\n        </div>\n        <div className=\"newsfeed__market__section\">\n          <div className=\"newsfeed__market__box\">\n            <p> Markets Closed</p>\n            <h1> Happy Thanksgiving</h1>\n          </div>\n        </div>\n        <div className=\"newsfeed__popularlists__section\">\n          <div className=\"newsfeed__popularlists__intro\">\n            <h1>Popular lists</h1>\n            <p>Show More</p>\n          </div>\n          <div className=\"newsfeed_popularlists_badges\">\n            {popularTopics.map((topic) => (\n              <Chip \n                className=\"topic__badge\"\n                variant=\"outlined\"\n                label={topic}\n                avatar={<Avatar\n                  src={`https://avatars.dicebear.com/api/human/${topic}.svg`}\n                />} \n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Newsfeed;\n","/mnt/c/Users/Ahmed/projects/robinhood-clone-master/src/index.js",[],{"ruleId":"57","severity":1,"message":"58","line":4,"column":9,"nodeType":"59","messageId":"60","endLine":4,"endColumn":12},{"ruleId":"61","severity":1,"message":"62","line":43,"column":17,"nodeType":"63","endLine":43,"endColumn":67},{"ruleId":"64","severity":1,"message":"65","line":26,"column":33,"nodeType":"66","messageId":"67","endLine":26,"endColumn":35},{"ruleId":"64","severity":1,"message":"65","line":55,"column":28,"nodeType":"66","messageId":"67","endLine":55,"endColumn":30},{"ruleId":"68","severity":1,"message":"69","line":70,"column":6,"nodeType":"70","endLine":70,"endColumn":29,"suggestions":"71"},{"ruleId":"61","severity":1,"message":"62","line":24,"column":9,"nodeType":"63","endLine":24,"endColumn":44},{"ruleId":"57","severity":1,"message":"72","line":10,"column":25,"nodeType":"59","messageId":"60","endLine":10,"endColumn":34},{"ruleId":"57","severity":1,"message":"73","line":23,"column":10,"nodeType":"59","messageId":"60","endLine":23,"endColumn":14},"no-unused-vars","'key' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'testData'. Either exclude it or remove the dependency array. Outer scope values like 'testData' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["74"],"'setTopics' is assigned a value but never used.","'seed' is assigned a value but never used.",{"desc":"75","fix":"76"},"Update the dependencies array to be: [getMyStocks]",{"range":"77","text":"78"},[1662,1685],"[getMyStocks]"]